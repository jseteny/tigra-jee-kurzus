<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>hu.tigra.jee</groupId>
    <artifactId>learn.jax.ws</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-7.0</artifactId>
            <version>1.0.0.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ws.cxf</groupId>
            <artifactId>jbossws-cxf-client</artifactId>
            <version>5.1.1.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.6.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>JBOSS_NEXUS</id>
            <url>http://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>JBOSS_NEXUS</id>
            <url>http://repository.jboss.org/nexus/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <testResources>
            <!-- Copy the Log4J configuration in the test classpath -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>log4j.xml</include>
                </includes>
            </testResource>
        </testResources>
        <!-- The name of the WAR deployment -->
        <finalName>learn.jax.ws</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- The plugin for WildFly deploy / undeploy -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.0.2.Final</version>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- JBossWS JAXWS tools plugins -->
            <plugin>
                <groupId>org.jboss.ws.plugins</groupId>
                <artifactId>jaxws-tools-maven-plugin</artifactId>
                <version>1.2.0.Final</version>
                <configuration>
                    <verbose>true</verbose>
                </configuration>
                <executions>
                    <execution>
                        <!-- Run wsprovide to create the wsdl for the endpoint to be used later -->
                        <!-- This also creates the request/response wrapper classes that are also included in the deployement (actually optional w/ JBossWS) -->
                        <id>wsprovide execution</id>
                        <goals>
                            <goal>wsprovide</goal>
                        </goals>
                        <configuration>
                            <endpointClass>hu.tigra.jee.HelloWorldImpl</endpointClass>
                            <generateWsdl>true</generateWsdl>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Run wsconsume in generate-test-sources phase to generate the portable artifacts for creating a test client -->
                        <id>wsconsume execution</id>
                        <goals>
                            <goal>wsconsume-test</goal>
                        </goals>
                        <configuration>
                            <wsdls>
                                <wsdl>${project.build.directory}/wsprovide/resources/HelloWorldService.wsdl</wsdl>
                            </wsdls>
                            <targetPackage>client</targetPackage>
                            <outputDirectory>${project.build.directory}/wsconsume</outputDirectory>
                            <fork>true</fork>
                            <argLine>-Djavax.xml.accessExternalSchema=file,http</argLine>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Surefire (tests) plugin -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.7.2</version>
                <configuration>
                    <skip>true</skip>
                    <failIfNoTests>false</failIfNoTests>
                    <systemProperties>
                        <property>
                            <name>log4j.output.dir</name>
                            <value>${project.build.directory}</value>
                        </property>
                    </systemProperties>
                </configuration>
                <executions>
                    <!-- The integration tests execution, for tests against a running container with the deployment available -->
                    <execution>
                        <id>integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <includes>
                                <include>**/*IntegrationTest.java</include>
                                <include>**/*IntegrationTestCase.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <!-- The unit tests execution -->
                    <execution>
                        <id>tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <includes>
                                <include>**/*Test.java</include>
                                <include>**/*TestCase.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*IntegrationTest.java</exclude>
                                <exclude>**/*IntegrationTestCase.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- A profile to avoid meaningless Eclipse warnings / errors (see https://issues.jboss.org/browse/JBWS-3666) -->
        <profile>
            <id>eclipse-m2e</id>
            <activation>
                <property>
                    <name>!eclipse-m2e</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.jboss.ws.plugins</groupId>
                                                <artifactId>jaxws-tools-maven-plugin</artifactId>
                                                <versionRange>[1.1.1.Final,)</versionRange>
                                                <goals>
                                                    <goal>wsconsume</goal>
                                                    <goal>wsconsume-test</goal>
                                                    <goal>wsprovide</goal>
                                                    <goal>wsprovide-test</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore/>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
